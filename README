This proof code concerns a function _raise_ and its properties. 
For all types _A_ and _B_, _raise_ relates sets of _A_ to sets of _B_ using a relation in A and B.

#+Begin_example
raise : (A -> B -> Prop) -> (A -> Prop) -> (B -> Prop) -> Prop
#+End_example

Concerning a relation _R_, a set _S_ relates to a set _T_ iff all members of _S_ relate to all members of _T_ via the relation _R_.  
The _raise_ function may be defined as:

raise(r, s, t) := ∀a∀b(s(a) -> r(a, b) -> t(b)).

or equivalently:

raise(r, s) := {t | ∀a∀b(s(a) -> r(a, b) -> t(b))}.

The following sentences in first order logic are proven (where _a_ stands for _raise_):

P1 = ∀r∀s∀t(a(r, s ∪ t) ⊇ a(r, s) ∩ a(r, t))
P2 = ∀r∀s∀t(a(r, s ∩ t) ⊇ a(r, s) ∪ a(r, t))
P3 = ∀r∀s∀t(a(r, s) ∩ a(r, t) ⊇ a(r, s ∪ t))
P4 = ∀r∀s∀t(a(r, s) ∪ a(r, t) ⊇ a(r, s ∪ t))

Given 1 and 3:
5. ∀s∀t(a(s ∪ t) = a(s) ∩ a(t))

Note that 2 and 4 are asymmetrical.  I have not found a proof of 6* or its negation.

6*. ∀s∀t(a(s) ∪ a(t) ⊇ a(s ∩ t))

If sentence 6* could be proven, then the following would be true:

7*. ∀s∀t(a(s ∩ t) = a(s) ∪ a(t))
